version: 4
shared:
    environment:
        DOCUMENTATION_FORMATS: mkdocs
        SCM_CLONE_TYPE: https
    secrets:
        - SCM_USERNAME
        - SCM_ACCESS_TOKEN
    settings:
        email:
            addresses:
                - ychaos-alerts@verizonmedia.com
            statuses:
                - ABORTED
                - FAILURE
    annotations:
        docker_login: &docker_login |
            apk add git
            git clone https://github.com/screwdriver-cd/toolbox.git ci
            ./ci/git-latest.sh
            docker login --username $DOCKER_REGISTRY_USER --password $DOCKER_REGISTRY_TOKEN

        docker_build: &docker_build |
            DOCKER_TAG=`cat VERSION`
            docker build --build-arg PY_VERSION=$PY_VERSION -t $DOCKER_REPO:py$PY_VERSION-latest .
            docker tag $DOCKER_REPO:latest $DOCKER_REPO:py$PY_VERSION-$DOCKER_TAG
            docker images

        docker_publish: &docker_publish |
            docker push $DOCKER_REPO:py$PY_VERSION-latest
            docker push $DOCKER_REPO:py$PY_VERSION-$DOCKER_TAG

jobs:
    # Validation jobs
    dependency_validation:
        template: python/validate_dependencies
        requires: [~pr, ~commit]

    doc_validation:
        template: python/documentation
        environment:
            DOCUMENTATION_PUBLISH: False
        requires: [~pr]
        steps:
            - prepublish_documentation: python3 screwdriver/autogen_docs.py

    lint_validation:
        template: python/validate_lint
        requires: [~pr, ~commit]

    package_validation:
        template: python/package_python
        environment:
            PACKAGE_PYTHON_PUBLISH: False
        requires: [~pr]

    security_validation:
        environment:
            SECURITY_BANDIT_CONFIG_ARGS: "-s B101"
        template: python/validate_security
        requires: [~pr, ~commit]
        steps:
            - postvalidate_code: ./screwdriver/semgrep.sh

    # Style validation using `flake8`
    style_validation:
        template: python/validate_codestyle
        requires: [~pr, ~commit]
        steps:
            - postinstall_dependencies: pip install -U .[pep8]
            - validate_code: flake8 src/ychaos
            - postvalidate_code: codespell --skip "*.css" src tests develop docs

    # Code Format Validation using `black`
    code_format_validation:
        template: python/validate_codestyle
        requires: [~pr, ~commit]
        steps:
            - postinstall_dependencies: pip install -U .[pep8]
            - validate_code: black --check src/ tests/ develop/ setup.py

    test_validation_py36:
        template: python/validate_unittest
        environment:
            TOX_ARGS: --parallel all
            TOX_ENVLIST: py36
        requires: [~pr, ~commit]
        steps:
            - codecov: echo "Skip Codecov"

    test_validation_py37:
        template: python/validate_unittest
        environment:
            TOX_ARGS: --parallel all
            TOX_ENVLIST: py37
        requires: [ ~pr, ~commit ]
        steps:
            - codecov: echo "Skip Codecov"

    test_validation_py38:
        template: python/validate_unittest
        environment:
            TOX_ARGS: --parallel all
            TOX_ENVLIST: py38
        requires: [ ~pr, ~commit ]
        steps:
            - codecov: echo "Skip Codecov"

    test_validation_py310:
        template: python/validate_unittest
        environment:
            TOX_ARGS: --parallel all
            TOX_ENVLIST: py310
        requires: [ ~pr, ~commit ]
        steps:
            - prevalidate_code: yum install -y libffi libffi-devel
            - codecov: echo "Skip Codecov"

    test_validation_py39:
        template: python/validate_unittest
        environment:
            TOX_ARGS: --parallel all
            TOX_ENVLIST: py39
        requires: [ ~pr, ~commit ]
        steps:
            - codecov: chmod +x ./screwdriver/codecov.sh && ./screwdriver/codecov.sh

    type_validation:
        template: python/validate_type
        requires: [~pr, ~commit]
        steps:
            - postinstall_dependencies: pip install -U .[mypy]
            - validate_code: ${BASE_PYTHON} -m mypy --txt-report /sd/workspace/artifacts/reports/type_validation --ignore-missing-imports src

    # Package auto-versioning, this must run before generating a package for publishing
    version_test_pypi:
        template: python-2104/version
        requires:
            - dependency_validation
            - lint_validation
            - style_validation
            - type_validation
            - security_validation
            - code_format_validation

            # Unittest Jobs
            - test_validation_py36
            - test_validation_py37
            - test_validation_py38
            - test_validation_py39

    # Publish package to test.pypi.org
    # Release to test.pypi is auto triggered for every commit
    # to the repository.
    package_publish_test_pypi:
        environment:
            PUBLISH: True
            TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
        template: python/package_python
        requires: [version_test_pypi]

    publish_test_docker_PY36:
        image: docker:dind
        secrets:
            - DOCKER_REGISTRY_USER
            - DOCKER_REGISTRY_TOKEN
        environment:
            DOCKER_REPO: ychaos/ychaos
            PY_VERSION: 3.6
        requires: [package_publish_test_pypi]
        steps:
            - login: *docker_login
            - build: *docker_build
            - publish: *docker_publish


    # Release Pipeline to publish package to PyPi
    # This is manually triggered by the maintainers
    # to publish a new version release to PyPi
    release:
        template: sd/noop
        blockedBy:
            - ~dependency_validation
            - ~lint_validation
            - ~style_validation
            - ~type_validation
            - ~security_validation
            - ~code_format_validation

            # Unittest Jobs
            - ~test_validation_py36
            - ~test_validation_py37
            - ~test_validation_py38
            - ~test_validation_py39

    version_pypi:
        template: python-2104/version
        requires:
            # Manually trigger release
            - release

            # Validation Jobs
            - dependency_validation
            - lint_validation
            - style_validation
            - type_validation
            - security_validation
            - code_format_validation

            # Unittest Jobs
            - test_validation_py36
            - test_validation_py37
            - test_validation_py38
            - test_validation_py39

    package_publish_pypi:
        template: python/package_python
        environment:
            PUBLISH: True
        requires: [version_pypi]

    doc_publish:
        template: python/documentation
        environment:
            DOCUMENTATION_PUBLISH: True
        steps:
            - prepublish_documentation: python3 screwdriver/autogen_docs.py
        requires: [package_publish_pypi]
