version: 4
shared:
    environment:
        # Documentation tool to use, can be either sphinx which looks for documentation in doc/source
        # or mkdocs which looks for documentation in docs.
        # By default use [mkdocs](https://www.mkdocs.org/) tool to build documentation from the [docs](docs) directory.
        DOCUMENTATION_FORMATS: mkdocs
        SCM_CLONE_TYPE: https
    secrets:
        - SCM_USERNAME
        - SCM_ACCESS_TOKEN

jobs:
    # Validation jobs
    dependency_validation:
        template: python/validate_dependencies
        requires: [~pr, ~commit]

    doc_validation:
         template: python/documentation
         environment:
             DOCUMENTATION_PUBLISH: False
         requires: [~pr]
         steps:
             - prepublish_documentation: python3 screwdriver/autogen_docs.py

    lint_validation:
        template: python/validate_lint
        requires: [~pr, ~commit]

    package_validation:
        template: python/package_python
        environment:
            PACKAGE_PYTHON_PUBLISH: False
        requires: [~pr]

    security_validation:
        environment:
            SECURITY_BANDIT_CONFIG_ARGS: "-s B101"
        template: python/validate_security
        requires: [~pr, ~commit]

    # Style validation using `flake8`
    style_validation:
        template: python/validate_codestyle
        requires: [~pr, ~commit]
        steps:
            - postinstall_dependencies: pip install -U .[pep8]
            - validate_code: flake8 src/ychaos

    # Code Format Validation using `black`
    code_format_validation:
        template: python/validate_codestyle
        requires: [~pr, ~commit]
        steps:
            - postinstall_dependencies: pip install -U .[pep8]
            - validate_code: black --check src/ tests/ develop/ setup.py

    test_validation_py36:
        template: python/validate_unittest
        environment:
            TOX_ARGS: --parallel all
            TOX_ENVLIST: py36
        requires: [~pr, ~commit]
        steps:
            - codecov: echo "Skip Codecov"

    test_validation_py37:
        template: python/validate_unittest
        environment:
            TOX_ARGS: --parallel all
            TOX_ENVLIST: py37
        requires: [ ~pr, ~commit ]
        steps:
            - codecov: echo "Skip Codecov"

    test_validation_py38:
        template: python/validate_unittest
        environment:
            TOX_ARGS: --parallel all
            TOX_ENVLIST: py38
        requires: [ ~pr, ~commit ]

    test_validation_py39:
        template: python/validate_unittest
        environment:
            TOX_ARGS: --parallel all
            TOX_ENVLIST: py39
        requires: [ ~pr, ~commit ]

    type_validation:
        template: python/validate_type
        requires: [~pr, ~commit]
        steps:
            - postinstall_dependencies: pip install -U .[mypy]
            - validate_code: ${BASE_PYTHON} -m mypy --txt-report /sd/workspace/artifacts/reports/type_validation --ignore-missing-imports src

#    # Package auto-versioning, this must run before generating a package for publishing
#    version:
#        template: python/version
#        requires: [dependency_validation, lint_validation, style_validation, type_validation, security_validation, test_validation, code_format_validation]
#
#    # Python packaging
#    python_package:
#        template: python/package_python
#        requires: [version]

    # TODO: Add `requires` to autopublish documentation on commit after the repo is made public.
    doc_publish:
        template: python/documentation
        environment:
            DOCUMENTATION_PUBLISH: True
        steps:
            - prepublish_documentation: python3 screwdriver/autogen_docs.py
